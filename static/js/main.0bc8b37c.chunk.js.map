{"version":3,"sources":["components/SupportComponents/LoadingModal/LoadingModal.tsx","components/CV/CV.tsx","redux/Global/globalReducer.tsx","redux/store.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoadingModal","style","position","display","backgroundColor","width","height","margin","color","icon","faCog","size","spin","connect","state","global","dispatch","props","useState","textContent","setTextContent","useEffect","axios","get","process","then","a","res","languageSetting","data","eng","hun","flexDirection","className","src","alt","aboutMe","title","content","map","p","i","workExperience","inJobExperience","exp","firstHandExperience","cursor","href","link","target","technologySkills","education","date","school","faculty","language","lang","initialState","rootReducer","combineReducers","action","type","store","createStore","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bc8b37c.chunk.js","sourcesContent":["import { faCog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { CSSProperties } from \"react\";\r\n\r\nexport const LoadingModal = () => {\r\n\r\nconst style: CSSProperties = {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    backgroundColor: 'rgba(255, 255, 255, .6)',\r\n    width: '100%',\r\n    height: '100%',\r\n}\r\n\r\n  return (\r\n    <div style={style}>\r\n      <FontAwesomeIcon style={{margin:'auto', color:'#44546A'}} icon={faCog} size={'6x'} spin={true}/>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./CV.scss\";\r\nimport { LoadingModal } from \"../SupportComponents/LoadingModal/LoadingModal\";\r\nimport { Link } from \"react-router-dom\";\r\nconst CV = (props: any) => {\r\n  const [textContent, setTextContent] = useState<any>(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.PUBLIC_URL}/cv/cv_text_content.json`)\r\n      .then(async (res) => {\r\n        await setTextContent(\r\n          props.global.languageSetting === \"eng\" ? res.data.eng : res.data.hun\r\n        );\r\n      });\r\n  }, [props.global.languageSetting]);\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\", height: \"100%\" }}>\r\n      {textContent ? (\r\n        <>\r\n          <div className={\"personal-informations\"}>\r\n            <div className=\"me-picture-holder\">\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/cv/me.png`}\r\n                alt={\r\n                  props.global.languageSetting === \"eng\"\r\n                    ? \"A picture of Martin Bacsur\"\r\n                    : \"Egy kép Bacsur Martin-ról\"\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"arrow-decoration\"></div>\r\n            <div className=\"about-me\">\r\n              <h3>{textContent.aboutMe.title}</h3>\r\n              {textContent.aboutMe.content.map((p: string, i: number) => {\r\n                return <p key={i}>{p}</p>;\r\n              })}\r\n            </div>\r\n            <div className=\"skills\"></div>\r\n          </div>\r\n          <div className=\"main-informations\">\r\n            <div className=\"header\">\r\n              <h1>bacsur martin</h1>\r\n              <h4>{textContent.title}</h4>\r\n            </div>\r\n            <div className=\"work-experience\">\r\n              <h3 className=\"cv-content-title\">\r\n                {textContent.workExperience.inJobExperience.title}\r\n              </h3>\r\n              {textContent.workExperience.inJobExperience.content.map(\r\n                (exp: string, i: number) => {\r\n                  return (\r\n                    <span key={i} className={i % 2 === 0 ? \"company\" : \"job\"}>\r\n                      {exp}\r\n                    </span>\r\n                  );\r\n                }\r\n              )}\r\n\r\n              <span\r\n                className=\"company\"\r\n                style={{ margin: \".1rem auto .1rem 4rem\" }}\r\n              >\r\n                {textContent.workExperience.firstHandExperience.title}\r\n              </span>\r\n              {textContent.workExperience.firstHandExperience.content.map(\r\n                (exp: any, i: number) => {\r\n                  return (\r\n                    <a\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"firsthand-job\"\r\n                      key={i}\r\n                      href={`${exp.link}`}\r\n                      target=\"_blank\"\r\n                    >\r\n                      {exp.title}\r\n                    </a>\r\n                  );\r\n                }\r\n              )}\r\n            </div>\r\n            <div className=\"technology-skills\">\r\n              <h3 className=\"cv-content-title\">\r\n                {textContent.technologySkills}\r\n              </h3>\r\n              <div className=\"front-end\">\r\n                <h3 className=\"development-side\">front-end</h3>\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/cv/frontend/js.png`}\r\n                  alt=\"Javascript\"\r\n                />\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/cv/frontend/typescript.png`}\r\n                  alt=\"Typescript\"\r\n                />\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/cv/frontend/react.png`}\r\n                  alt=\"ReactJs\"\r\n                />\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/cv/frontend/jquery.png`}\r\n                  alt=\"jQuery\"\r\n                />\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/cv/frontend/Sass.svg`}\r\n                  alt=\"Sass Script\"\r\n                />\r\n              </div>\r\n              <div className=\"back-end\">\r\n                <h3 className=\"development-side\">back-end</h3>\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/cv/backend/node.png`}\r\n                  alt=\"Node\"\r\n                />\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/cv/backend/netCore.png`}\r\n                  alt=\"dotNetCore\"\r\n                />\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/cv/backend/mysql.png`}\r\n                  alt=\"mySql\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"education\">\r\n              <h3 className=\"cv-content-title\">\r\n                {textContent.education.title}\r\n              </h3>\r\n              {textContent.education.content.map((education: any) => {\r\n                return (\r\n                  <>\r\n                    <h3 className=\"education-date\">{education.date}</h3>\r\n                    <span className=\"education-school\">{education.school}</span>\r\n                    <span>{education.faculty}</span>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"language\">\r\n              <h3 className=\"cv-content-title\">{textContent.language.title}</h3>\r\n              {textContent.language.content.map((lang: any) => {\r\n                return <span>{lang}</span>;\r\n              })}\r\n            </div>\r\n            {/* <div>\r\n                <h3 className=\"cv-content-title\">Skills</h3>\r\n            </div> */}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <LoadingModal />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    global: state.global,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CV);\r\n","import { GET_LANGUAGE_SETTING, globalReducerActionType } from \"./globalTypes\";\r\n\r\nconst initialState = {\r\n  languageSetting: \"hun\",\r\n}\r\n\r\nexport const globalReducer = (state : any = initialState, action: globalReducerActionType) => {\r\n  switch (action.type) {\r\n   \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { globalReducer } from \"./Global/globalReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    global: globalReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import \"./App.scss\";\nimport CV from \"./components/CV/CV\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <CV></CV>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}